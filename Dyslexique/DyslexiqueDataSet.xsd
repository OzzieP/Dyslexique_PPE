<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DyslexiqueDataSet" targetNamespace="http://tempuri.org/DyslexiqueDataSet.xsd" xmlns:mstns="http://tempuri.org/DyslexiqueDataSet.xsd" xmlns="http://tempuri.org/DyslexiqueDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DyslexiqueConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DyslexiqueConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Dyslexique.Properties.Settings.GlobalReference.Default.DyslexiqueConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MotTableAdapter" GeneratorDataComponentClassName="MotTableAdapter" Name="Mot" UserDataComponentName="MotTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DyslexiqueConnectionString (Settings)" DbObjectName="Dyslexique.dbo.Mot" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Mot] WHERE (([idMot] = @Original_idMot) AND ([texte] = @Original_texte) AND ([idClasse] = @Original_idClasse))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idMot" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMot" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_texte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="texte" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idClasse" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idClasse" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Mot] ([texte], [idClasse]) VALUES (@texte, @idClasse);
SELECT idMot, texte, idClasse FROM Mot WHERE (idMot = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@texte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="texte" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idClasse" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idClasse" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idMot, texte, idClasse FROM dbo.Mot</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Mot] SET [texte] = @texte, [idClasse] = @idClasse WHERE (([idMot] = @Original_idMot) AND ([texte] = @Original_texte) AND ([idClasse] = @Original_idClasse));
SELECT idMot, texte, idClasse FROM Mot WHERE (idMot = @idMot)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@texte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="texte" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idClasse" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idClasse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idMot" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMot" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_texte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="texte" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idClasse" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idClasse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idMot" ColumnName="idMot" DataSourceName="Dyslexique.dbo.Mot" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idMot" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idMot" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idMot" DataSetColumn="idMot" />
              <Mapping SourceColumn="texte" DataSetColumn="texte" />
              <Mapping SourceColumn="idClasse" DataSetColumn="idClasse" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DyslexiqueDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DyslexiqueDataSet" msprop:Generator_UserDSName="DyslexiqueDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Mot" msprop:Generator_TableClassName="MotDataTable" msprop:Generator_TableVarName="tableMot" msprop:Generator_TablePropName="Mot" msprop:Generator_RowDeletingName="MotRowDeleting" msprop:Generator_RowChangingName="MotRowChanging" msprop:Generator_RowEvHandlerName="MotRowChangeEventHandler" msprop:Generator_RowDeletedName="MotRowDeleted" msprop:Generator_UserTableName="Mot" msprop:Generator_RowChangedName="MotRowChanged" msprop:Generator_RowEvArgName="MotRowChangeEvent" msprop:Generator_RowClassName="MotRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idMot" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidMot" msprop:Generator_ColumnPropNameInRow="idMot" msprop:Generator_ColumnPropNameInTable="idMotColumn" msprop:Generator_UserColumnName="idMot" type="xs:int" />
              <xs:element name="texte" msprop:Generator_ColumnVarNameInTable="columntexte" msprop:Generator_ColumnPropNameInRow="texte" msprop:Generator_ColumnPropNameInTable="texteColumn" msprop:Generator_UserColumnName="texte">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="idClasse" msprop:Generator_ColumnVarNameInTable="columnidClasse" msprop:Generator_ColumnPropNameInRow="idClasse" msprop:Generator_ColumnPropNameInTable="idClasseColumn" msprop:Generator_UserColumnName="idClasse" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Mot" />
      <xs:field xpath="mstns:idMot" />
    </xs:unique>
  </xs:element>
</xs:schema>